//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeroEngine {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Default {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Default() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HeroEngine.Default", typeof(Default).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MOVELEFT=A
        ///MOVERIGHT=D
        ///MOVEUP=W
        ///MOVEDOWN=S
        ///MENU=M
        ///TORCH=F
        ///PAUSE=Escape.
        /// </summary>
        internal static string binding {
            get {
                return ResourceManager.GetString("binding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //To add a resource (yes modders, over here). Use this syntax:
        /////GRASS_NORMAL:Tiles/tile-00
        /////Newlines are new files.
        /////TYPE is not too important for modders. (Texture, Sound, Music)
        ///TYPE:Font
        ///AmmoCount:gui/font/ammo_count
        ///MenuItem:gui/font/menu_item
        ///SmallText:gui/font/small_text
        ///StatusMessage:gui/font/status_message
        ///TitleText:gui/font/TitleText
        ///.
        /// </summary>
        internal static string font {
            get {
                return ResourceManager.GetString("font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //To add a resource (yes modders, over here). Use this syntax:
        /////GRASS_NORMAL:Tiles/tile-00
        /////Newlines are new files.
        /////TYPE is not too important for modders. (Texture, Sound, Music)
        ///TYPE:Music
        ///TRACK1:sound\music\examplemusic01
        ///TRACK2:sound\music\examplemusic02
        ///TRACK3:sound\music\examplemusic03.
        /// </summary>
        internal static string music {
            get {
                return ResourceManager.GetString("music", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //To add a resource (yes modders, over here). Use this syntax:
        /////GRASS_NORMAL:Tiles/tile-00
        /////Newlines are new files.
        /////TYPE is not too important for modders. (Texture, Sound, Music)
        ///TYPE:Sound.
        /// </summary>
        internal static string sound {
            get {
                return ResourceManager.GetString("sound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string texture {
            get {
                return ResourceManager.GetString("texture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TileLookup {
            get {
                return ResourceManager.GetString("TileLookup", resourceCulture);
            }
        }
    }
}
